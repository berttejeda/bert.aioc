git:
  apps:
    - binary: git-cmd.exe
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
    - binary: git-bash.exe
      command: "--no-cd --command=usr/bin/bash.exe -l -i"      
    - binary: <%= "$env:ProgramFiles\Git\git-cmd.exe" %>
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
    - binary: <%= "$env:ProgramFiles\Git\git-bash.exe" %>
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
    - binary: <%= $env:LOCALAPPDATA %>\Programs\Git\git-cmd.exe
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
    - binary: <%= "$env:ProgramFiles\Git\bin\git-cmd.exe" %>
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
    - binary: <%= "$env:ProgramFiles\Git\bin\git-bash.exe" %>
      command: "--no-cd --command=usr/bin/bash.exe -l -i"
  notfound: |-
    "Could not find the git bash executable in any of the configured paths:"
    $($($Settings.shells.git.apps) | %{"$($_.binary)`n"})
    "You can install bash via git-bash, as follows:"
    "A. Using chocolatey (requires you install it first):"
      "choco install -y git"
    "B. Manually:"
      "1. Go here: https://git-for-windows.github.io/"
      "2. Install, and when prompted for options, choose these below:"
      "'Use Git from Bash only'"
      "'Use OpenSSH'"
      "'Checkout Windows-style, commit Unix-style line endings'"
      "You can accept default options thereafter ...  "
    "git shell settings file can be found here: $APP_DIR\etc\settings\shells.yaml"

python:
  apps:
    - binary: <%= $env:LOCALAPPDATA %>\Programs\Python27\python.exe
    - binary: C:\Python27\python.exe
    - binary: Programs\python\python.exe
    - binary: Programs\python2\python.exe
    - binary: Programs\python3\python.exe
    - binary: python.exe
  notfound: |-
    "Could not find the python executable in any of the configured paths:"
    $($($Settings.shells.python.apps) | %{"$($_.binary)`n"})
    "You can install python as follows:"
    "A. Using chocolatey (requires you install it first):"
      "choco install -y python"
    "B. Manually:"
      "1. Go to the python downloads site: https://www.python.org/downloads/windows/"
      "2. Choose the latest release and download the installer"
      "3. Install"
    "python shell settings file can be found here: $APP_DIR\etc\settings\shells.yaml"
sublimetext3:
  apps:
    - binary: Programs\Sublime Text 3\sublime_text.exe
    - binary: <%= "$env:ProgramFiles\Sublime Text 3\sublime_text.exe" %>
      command: "sublime_text.exe -a ."
  notfound: |-
    "Could not find the Sublime Text 3 executable in any of the configured paths:"
    $($($Settings.shells.sublime.apps) | %{"$($_.binary)`n"})
    "You can install Sublime Text 3 as follows:"
    "A. Using chocolatey (requires you install chocolatey first):"
      "choco install -y SublimeText3
    "B. Manually:"
      "1. Go to the Sublime Text 3 download site: https://www.sublimetext.com/3"
      "2. Choose the latest release and download the installer"
      "3. Install"

zsh:
  apps:
    - binary: <%= $env:LOCALAPPDATA %>\Programs\Git\usr\bin\zsh.exe
  notfound: |-
    "Could not find the zsh executable in any of the configured paths:"
    $($($Settings.shells.zsh.apps) | %{"$($_.binary)`n"})
    "You can install zsh as follows:
      * Start a new PowerShell Terminal
      * Install Chocolatey
        Set-Variable -Name "ChocolateyInstallPath" -Value "$(Join-Path -Path $Env:LocalAppData -ChildPath chocolatey)"
        New-Item $ChocolateyInstallPath -Type Directory -Force
        [Environment]::SetEnvironmentVariable("ChocolateyInstall", $ChocolateyInstallPath)
        Set-ExecutionPolicy Bypass -Scope Process
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      * Install git-bash
        choco install -y git
      * Launch git bash, e.g.
        <%= $env:LOCALAPPDATA %>\Programs\Git\git-bash.exe --cd-to-home
      * Install gcc (via mingw)
        choco install -y mingw
      * Navigate to your downloads folder
        cd $HOME\Downloads
      * Download the zsh package (adjust version to your needs)
        curl -ksO https://repo.msys2.org/msys/x86_64/zsh-5.9-2-x86_64.pkg.tar.zst
      * Build zstd and untar + decompress the zsh package
        CC=gcc make -C zstd
        mkdir zsh && tar --use-compress-program=zstd/zstd.exe -xvf zsh-5.9-2-x86_64.pkg.tar.zst -C zsh
      * Merge the zsh content to Git BASH directory
        cp -R zsh/etc /
        cp -R zsh/usr /
      * Set up zsh
        touch ~/.zshrc
        echo "test -t && exec zsh" >> ~/.bashrc    
      * Clean up and test zsh
        rm -rf zsh zsh.tar.zst zstd
        zsh --version
      * Set up Oh My ZshPermalink
        At this point you have zsh installed, next just set up Oh My Zsh the way you like.
        * install oh my zsh
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
        * Install bert.zsh
          source <(curl -Lks https://raw.githubusercontent.com/berttejeda/bert.zsh/master/.installer.sh)
        * install plugins etc        
